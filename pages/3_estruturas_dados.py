import streamlit as st
from utils.helpers import display_chapter_navigation, display_note, display_tip, display_warning, display_code_with_explanation, display_encouragement, display_break_reminder, display_interactive_practice
from utils.code_examples import LIST_EXAMPLE, DICTIONARY_EXAMPLE

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Estruturas de Dados | APIs do Zero ao Avan√ßado",
    page_icon="üìö",
    layout="wide"
)

def main():
    # T√≠tulo principal
    st.title("3. Estruturas de Dados Simples")

    st.markdown("""
    Neste cap√≠tulo, vamos aprender sobre estruturas de dados - formas de organizar e armazenar
    informa√ß√µes no seu programa. Estas estruturas s√£o fundamentais para trabalhar com APIs,
    j√° que precisamos constantemente manipular dados de entrada e sa√≠da.
    """)

    # Se√ß√£o 1: Introdu√ß√£o √†s Estruturas de Dados
    st.markdown("## 3.1. Por que precisamos de estruturas de dados?")

    st.markdown("""
    Imagine que voc√™ est√° desenvolvendo uma API para uma lista de tarefas. Voc√™ precisaria armazenar:

    - V√°rias tarefas
    - Cada tarefa com diferentes informa√ß√µes (t√≠tulo, status, prazo, etc.)

    Como voc√™ organizaria esses dados? √â a√≠ que entram as estruturas de dados!

    **Estruturas de dados** s√£o formas organizadas de armazenar e manipular informa√ß√µes. Elas nos permitem:

    - Agrupar dados relacionados
    - Acessar informa√ß√µes de forma eficiente
    - Realizar opera√ß√µes espec√≠ficas nos dados

    Em Python, as estruturas de dados mais usadas para APIs s√£o:

    1. Listas (lists)
    2. Dicion√°rios (dictionaries)

    Vamos explorar cada uma delas em detalhes.
    """)

    # Se√ß√£o 2: Listas
    st.markdown("## 3.2. Listas")

    display_code_with_explanation(LIST_EXAMPLE, "Exemplo de opera√ß√µes com listas em Python")

    # Se√ß√£o 3: Dicion√°rios
    st.markdown("## 3.3. Dicion√°rios")

    display_code_with_explanation(DICTIONARY_EXAMPLE, "Exemplo de opera√ß√µes com dicion√°rios em Python")

if __name__ == "__main__":
    main()