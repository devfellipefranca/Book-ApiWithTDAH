import streamlit as st
from utils.helpers import display_chapter_navigation, display_note, display_tip, display_warning, display_code_with_explanation, display_encouragement, display_break_reminder, display_interactive_practice
from utils.code_examples import DATA_VALIDATION

# Configura√ß√£o da p√°gina
st.set_page_config(
    page_title="Manipula√ß√£o de Dados | APIs do Zero ao Avan√ßado",
    page_icon="üìö",
    layout="wide"
)

def main():
    # T√≠tulo principal
    st.title("6. Manipula√ß√£o de Dados")

    st.markdown("""
    Nas APIs que criamos at√© agora, trabalhamos com dados fixos ou muito simples. Em aplica√ß√µes
    reais, no entanto, precisamos lidar com dados enviados pelos usu√°rios, process√°-los e
    devolver respostas din√¢micas. Neste cap√≠tulo, vamos aprender como manipular dados em nossas APIs.
    """)

    # Se√ß√£o 1: Recebendo Dados do Usu√°rio
    st.markdown("## 6.1. Recebendo Dados do Usu√°rio")

    st.markdown("""
    Existem v√°rias formas de receber dados em uma API. Vamos explorar as principais:
    """)

    ### 1. Par√¢metros de URL

    st.markdown("""
    Os par√¢metros de URL (tamb√©m chamados de query parameters) s√£o adicionados ap√≥s o "?" na URL:
    """)

    st.code("""
    GET /produtos?categoria=eletronicos&ordem=preco
    """, language='http')

    st.markdown("""
    No Flask, voc√™ acessa esses par√¢metros usando `request.args`:
    """)

    st.code(
        """python
from flask import Flask, request, jsonify

app = Flask(__name__)

@app.route("/produtos")
def listar_produtos():
    # Obter par√¢metros da URL
    categoria = request.args.get("categoria")
    ordem = request.args.get("ordem", "nome")  # valor padr√£o "nome"

    # Usar os par√¢metros para filtrar ou ordenar
    if categoria:
        print(f"Filtrando por categoria: {categoria}")

    print(f"Ordenando por: {ordem}")

    # ... l√≥gica para buscar produtos ...

    return jsonify({"mensagem": "Produtos filtrados"})
""", language='python'
    )

    st.markdown("""
    Par√¢metros de URL s√£o ideais para:
    - Filtrar listas de recursos (`?categoria=eletronicos`)
    - Paginar resultados (`?pagina=2&itens_por_pagina=20`)
    - Definir ordena√ß√£o (`?ordem=preco_desc`)
    """)

    ### 2. Par√¢metros de Rota

    st.markdown("""
    Os par√¢metros de rota (tamb√©m chamados de path parameters) s√£o parte do caminho da URL:
    """)


if __name__ == "__main__":
    main()